rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }

    function isAdmin() {
      return isAuthenticated() && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    function isUser() {
      return isAuthenticated() && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['user', 'admin'];
    }

    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    // Users collection rules
    match /users/{userId} {
      allow read: if isOwner(userId) || isAdmin();
      allow create: if isAuthenticated() && isOwner(userId);
      allow update: if isAdmin() || (isOwner(userId) && 
        !request.resource.data.diff(resource.data).affectedKeys().hasAny(['role']));
    }

    // Activities collection rules
    match /activities/{activityId} {
      allow read: if isUser() && (
        resource.data.userId == request.auth.uid || isAdmin()
      );
      allow create: if isUser() && request.resource.data.userId == request.auth.uid;
      allow update, delete: if isUser() && (
        resource.data.userId == request.auth.uid || isAdmin()
      );
    }
  }
}